data.watering
data.frame(result$'Snapshot Water Amount', result$'Snapshot Weight After', result$'Snapshot Weight Before')
data.frame(result$[7], result$[8], result$[9])
data.watering <- data.frame(A = result$[,8], B = result$[,9])
result$4
result$[,9]
result${,9}
after <- result$Snapshot.Weight.After
before <- result$Snapshot.Weight.Before
data.watering <- data.frame(before, after)
water.target <- result$Snapshot.Water.Amount.[g]
water.target <- result$Snapshot.Water.Amount
water.target
head(after)
data.watering <- data.frame(before, after, target)
data.watering <- data.frame(before, after, water.target)
data.watering
result
result <- read.csv("G:\\ARD-BundooraBRC\\PlantPhenomicsVictoria\\Experiments\\Results\\B2018000\\w\\20180917 - B2018000w - Watering Data - 01 - Tidy.csv")
before <- result$Snapshot.Weight.Before
after <- result$Snapshot.Weight.After
result
head(result)
result <- read.csv("G:\\ARD-BundooraBRC\\PlantPhenomicsVictoria\\Experiments\\Results\\B2018000\\w\\20180917 - B2018000w - Watering Data - 01 - Tidy.csv")
head(result
)
before <- result$Snapshot_Weight_Before
after <- result$Snapshot_Weight_After
after
library(readxl)
B2018004_Tracking_Sheet_Flowering_Scores <- read_excel("G:\\ARD-BundooraBRC\\PlantPhenomicsVictoria\\Experiments\\Results\\B2018004\\B2018004 - Tracking Sheet - Flowering Scores.xlsx")
View(B2018004_Tracking_Sheet_Flowering_Scores)
result <- read_excel("G:\\ARD-BundooraBRC\\PlantPhenomicsVictoria\\Experiments\\Results\\B2018004\\B2018004 - Tracking Sheet - Flowering Scores.xlsx")
result
data <- data.frame(cultivar, Heading Days, Anthesis Days)
data <- data.frame(cultivar, "Heading Days", "Anthesis Days")
data <- data.frame(Cultivar, "Heading Days", "Anthesis Days")
data <- data.frame("Cultivar", "Heading Days", "Anthesis Days")
data
View(data)
View(data)
View(data)
Cultivar
data <- data.frame(result$Cultivar, result$`Heading Days`, result$`Anthesis Days`)
data
boxplot(result.Cultivar ~ result..Heading.Days, data = data,
xlab = "Month", ylab = "Maximum Temperature",
main = "Temperature at Southampton Weather Station (1950-1999)"
)
boxplot(result$Cultivar ~ result$`Heading Days`, data = data,
xlab = "Month", ylab = "Maximum Temperature",
main = "Temperature at Southampton Weather Station (1950-1999)"
)
boxplot(result$`Heading Days` ~ result$Cultivar, data = data,
xlab = "Month", ylab = "Maximum Temperature",
main = "Temperature at Southampton Weather Station (1950-1999)"
)
boxplot(result$`Heading Days` ~ result$Cultivar, data = data,
xlab = "Cultivar", ylab = "Days to Heading",
main = "Days to Heading for twelve wheat cultivars"
)
bwplot(result$`Heading Days` ~ result$Cultivar, data = data,
xlab = "Cultivar", ylab = "Days to Heading",
main = "Days to Heading for twelve wheat cultivars"
)
ggplot(data, aes (result$`Heading Days`, result$Cultivar)) + geom_boxplot() + ylab ("Days to Heading") + opts (title= "Days to Heading for twelve wheat cultivars")
)
rm(list=ls())
install.packages("tidyverse")
install.packages("ggplot2")
install.packages(c("coda", "mvtnorm", "devtools"))
install.packages(c("daggity"))
path.package
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
rm(list=ls())
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
library(data.table)
library(ggplot2)
cold.data <- fread("D:\\ppv-cold\\ppvcold.txt", data.table=FALSE)
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
rm(list=ls())
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
summary(cold.temps, quantile.type=8)
quantile(cold.temps, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
quantile(cold.temps, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.12, "%Y-%m-%d")
time.18 <- substr(cold.data.12$Timestamp, 12, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
# Subset to 18-degrees
cold.data.18 <- cold.data[cold.data$Setpoint==18,]
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.12, "%Y-%m-%d")
time.18 <- substr(cold.data.12$Timestamp, 12, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.18, "%Y-%m-%d")
time.18 <- substr(cold.data.18$Timestamp, 12, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(11.5, 13.5)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(15, 21)
summary(temp.18, quantile.type=8)
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 12, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target.18.C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size.18., axis.text.y = element_text(size.18., axis.title.x = element_text(size.18. face="bold"), axis.title.y = element_text(size.18. face="bold"), title = element_text(size.18.) + scale_x_continuous(breaks = seq(round(min(temp.18. na.rm=T), 0)-1, round(max(temp.18. na.rm=T), 0), by = 0.5))
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
rm(list=ls())
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
cold.data.18 <- cold.data[cold.data$Setpoint==18,]
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.18, "%Y-%m-%d")
time.18 <- substr(cold.data.18$Timestamp,.18. 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
time.18
time.18 <- substr(cold.data.18$Timestamp, 18. 19)
time.18 <- substr(cold.data.18$Timestamp, .18. 19)
time.18 <- substr(cold.data.18$Timestamp, 18, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size.18., axis.title.x = element_text(size.18. face="bold"), axis.title.y = element_text(size.18. face="bold"), title = element_text(size.18.) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(15, 21)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size.18., axis.title.x = element_text(size.18. face="bold"), axis.title.y = element_text(size.18. face="bold"), title = element_text(size.18.) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(15, 21)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size.18., axis.title.x = element_text(size.18 face="bold"), axis.title.y = element_text(size.18 face="bold"), title = element_text(size.18) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(15, 21)
ggplot(cold.temps.18, aes(timestamp.18)) + geom_line(aes(y = temp.18, colour = "temp.18")) + geom_line(aes(y = set.18, colour = "set.18")) + labs(title="PPV Bundoora: Cold Temperature Measurements (18°C, Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size.18, axis.title.x = element_text(size.18 face="bold"), axis.title.y = element_text(size.18 face="bold"), title = element_text(size.18) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 hour", date_labels = "%d %b %Y") + ylim(15, 21)
dev.off()
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
summary(temp.18, quantile.type=8)
# Quantiles
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
# Remove ramping temperatures from data frame (to get proper distribution of values)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp,.18. 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
# Plot histogram
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
summary(temp.18, quantile.type=8)
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp,.18. 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp,18. 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 18, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Clear workspace
rm(list=ls())
# Set path
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
# Get data
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
# Set variables
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save file
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Subset to 18-degrees
cold.data.18 <- cold.data[cold.data$Setpoint==18,]
# Fix format
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.18, "%Y-%m-%d")
time.18 <- substr(cold.data.18$Timestamp, 18, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Summary
summary(temp.18, quantile.type=8)
# Quantiles
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
# Remove ramping temperatures from data frame (to get proper distribution of values)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 18, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
# Plot histogram
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
cold.data.18.clean <- cold.data.18.clean[!(cold.data.18.clean$`Control Temp`>=20),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 18, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
# Plot histogram
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Clear workspace
rm(list=ls())
# Set path
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
# Get data
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
# Set variables
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save file
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Subset to 18-degrees
cold.data.18 <- cold.data[cold.data$Setpoint==18,]
# Fix format
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.18, "%Y-%m-%d")
time.18 <- substr(cold.data.18$Timestamp, 18, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Summary
summary(temp.18, quantile.type=8)
# Quantiles
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
# Remove ramping temperatures from data frame (to get proper distribution of values)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
cold.data.18.clean <- cold.data.18.clean[!(cold.data.18.clean$`Control Temp`>=20),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 18, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
# Plot histogram
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Clear workspace
rm(list=ls())
# Set path
setwd("C:\\Data\\projects\\R-projects\\B2021004-Glasshouse-Temps")
# Get data
cold.data <- fread("PPVGH1_temperatures.csv", data.table=FALSE)
# Set variables
temp <- cold.data$`Control Temp`
set <- cold.data$Setpoint
date <- substr(cold.data$Timestamp, 0, 10)
date <- as.Date(date, "%Y-%m-%d")
time <- substr(cold.data$Timestamp, 12, 19)
timestamp <- as.POSIXct(paste(date, time), format="%Y-%m-%d %H:%M:%S")
cold.temps <- data.frame(timestamp, set, temp)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save file
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Subset to 18-degrees
cold.data.18 <- cold.data[cold.data$Setpoint==18,]
# Fix format
temp.18 <- cold.data.18$`Control Temp`
set.18 <- cold.data.18$Setpoint
date.18 <- substr(cold.data.18$Timestamp, 0, 10)
date.18 <- as.Date(date.18, "%Y-%m-%d")
time.18 <- substr(cold.data.18$Timestamp, 18, 19)
timestamp.18 <- as.POSIXct(paste(date.18, time.18), format="%Y-%m-%d %H:%M:%S")
cold.temps.18 <- data.frame(timestamp.18, set.18, temp.18)
# Plot
ggplot(cold.temps, aes(timestamp)) + geom_line(aes(y = temp, colour = "temp")) + geom_line(aes(y = set, colour = "set")) + labs(title="PPV Bundoora: Cold Temperature Measurements (Glasshouse 1)", x="Date and Time", y="Temperature (°C)", colour = "Measurement") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=10), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_fill_manual(name = "Measuremets", labels = c("Set Temperature", "Actual Temperature")) + scale_color_manual(labels = c("Target", "Observed"), values = c("red3", "cyan4")) + scale_x_datetime(expand=c(0,0), date_breaks= "1 days", date_minor_breaks = "1 days", date_labels = "%d %b %Y")
# Save
ggsave("temperatures_plot_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
# Summary
summary(temp.18, quantile.type=8)
# Quantiles
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
# Remove ramping temperatures from data frame (to get proper distribution of values)
cold.data.18.clean <- cold.data.18[!(cold.data.18$`Control Temp`<=16),]
cold.data.18.clean <- cold.data.18.clean[!(cold.data.18.clean$`Control Temp`>=20),]
# Fix format
temp.18.c <- cold.data.18.clean$`Control Temp`
set.18.c <- cold.data.18.clean$Setpoint
date.18.c <- substr(cold.data.18.clean$Timestamp, 0, 10)
date.18.c <- as.Date(date.18.c, "%Y-%m-%d")
time.18.c <- substr(cold.data.18.clean$Timestamp, 18, 19)
timestamp.18.c <- as.POSIXct(paste(date.18.c, time.18.c), format="%Y-%m-%d %H:%M:%S")
cold.temps.18.c <- data.frame(timestamp.18.c, set.18.c, temp.18.c)
# Plot histogram
ggplot(cold.temps.18.c, x=temp.18.c) + geom_histogram(aes(x=temp.18.c, y=..count..), size=1.1, color="cadetblue4", fill="cadetblue3") + labs(title="Distribution of PPVB Glasshouse 1 Temperature Measurements (Target 18°C)", x="Temperature Bins", y="Count") + theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust = 0.0, size=12), axis.text.y = element_text(size=12), axis.title.x = element_text(size=12, face="bold"), axis.title.y = element_text(size=12, face="bold"), title = element_text(size=12)) + scale_x_continuous(breaks = seq(round(min(temp.18, na.rm=T), 0)-1, round(max(temp.18, na.rm=T), 0), by = 0.5))
ggsave("temperatures_histogram_18degrees_ppv_GH1.svg", plot = last_plot(), device = png(), path = NULL, scale = 0.7, width = 40, height = 25, units = "cm", dpi = 300, limitsize = TRUE)
dev.off()
cold.data.12 <- cold.data[cold.data$Setpoint==12,]
cold.data.12 <- cold.data[cold.data$Setpoint==12,]
# Fix format
temp.12 <- cold.data.12$`Control Temp`
set.12 <- cold.data.12$Setpoint
date.12 <- substr(cold.data.12$Timestamp, 0, 10)
date.12 <- as.Date(date.12, "%Y-%m-%d")
time.12 <- substr(cold.data.12$Timestamp, 18, 19)
timestamp.12 <- as.POSIXct(paste(date.12, time.12), format="%Y-%m-%d %H:%M:%S")
cold.temps.12 <- data.frame(timestamp.12, set.12, temp.12)
# Summary
summary(temp.12, quantile.type=8)
# Quantiles
quantile(temp.12, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
quantile(temp.18, probs = seq(0, 1, 0.1), na.rm = T, names = TRUE, type = 7)
